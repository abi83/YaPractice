from typing import Dict

def movie_quotes(name: str) -> str:
    """ Возвращает цитаты известных персонажей из фильмов
    >>> movie_quotes('Элли')
    'Тото, у меня такое ощущение, что мы не в Канзасе!'
    >>> movie_quotes('Шерлок')
    'Элементарно, Ватсон!'
    >>> movie_quotes('Дарт Вейдер')
    'Я — твой отец.'
    >>> movie_quotes('Леонид Тощев')
    'Персонаж пока не известен миллионам.'
    """
    quotes: Dict[str, str] = {
        'Элли': 'Тото, у меня такое ощущение, что мы не в Канзасе!',
        'Шерлок': 'Элементарно, Ватсон!',
        'Дарт Вейдер': 'Я — твой отец.',
        'Алиса Плезенс Лидделл': 'Всё чудесатее и чудесатее!',
        'Thomas A. Anderson': 'Меня. Зовут. Нео!',
    }
    if name in quotes:
        return quotes[name]
    return 'Персонаж пока не известен миллионам.'

# Утверждаем, что если в функцию movie_quotes передать строку "Шерлок" -
# функция вернёт строку "Элементарно, Ватсон!".
# Если это утверждение не истинно - assert вернёт сообщение об ошибке
assert movie_quotes('Шерлок') == 'Элементарно, Ватсон!', "movie_quotes('Шерлок') не вернул ожидаемый результат!"

# Утверждаем, что если в movie_quotes передать "Thomas A. Anderson" -
# функция вернёт строку "Меня. Зовут. Нео!".
assert movie_quotes('Thomas A. Anderson') == 'Меня. Зовут. Нео!', (
    "movie_quotes('Thomas A. Anderson') не вернул ожидаемый результат!")

# Утверждаем, что если в movie_quotes передать "Алиса Плезенс Лидделл" -
# функция вернёт строку "Всё чудесатее и чудесатее!".
assert movie_quotes('Алиса Плезенс Лидделл') == 'Всё чудесатее и чудесатее!', (
    "movie_quotes('Алиса Плезенс Лидделл') не вернул ожидаемый результат!")