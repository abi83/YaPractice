from typing import Sequence, Dict, List, Tuple, Set

# Множество может принять только целые числа
var_set: Set[int] = {1, 2, 3, 4, 5, 6,}

# Словарь
# <имя_переменной>: Dict[<тип_ключа>, <тип_значения>]
# Ключ аннотирован как строка, а значение - как целое число
var_dict: Dict[str, int] = {'forty_two': 42, 'hundred': 100,}

# Список
# <имя_переменной>: List[<тип_значения>]
var_list: List[int] = [1, 2, 3, 4,]

# Кортеж с определенной длиной (перечисляются типы всех элементов)
# <имя_переменной>: Tuple[<тип_элемента_1>, <тип_элемента_2>, <тип_последнего элемента>]
var_tuple: Tuple[int, int, str, float] = (1, 2, 'привет', 1.618,)

# Кортеж с переменной длиной
# <имя_переменной>: Tuple[<тип_всех_элементов>, ...]
# Многоточие (Ellipsis) - это указание для Python, что длина кортежа не определена
var_tuple: Tuple[float, ...] = (1, 2, 3.4,)

# Универсальный тип Коллекция (принимает список или множество)
# <имя_переменной>: Sequence[<тип_всех_элементов>]
# принимает список
var_sequence: Sequence[float] = [1.2, 2, 3,]
# и принимает множество
var_sequence: Sequence[float] = {1.2, 2, 3,}

# TODO: Type Hits in all the project

